---
import CodeBlock from "../../../components/CodeBlock.astro";
import FlexContainer from "../../../components/FlexContainer.astro";
import Slide from "../../../components/Slide.astro";

const { title } = Astro.props;
const subSectionTitle = "";
---

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<p>
		<button type="button" onclick="this.toggleAttribute('open')">
			<svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
				<path
					d="M3 3H45"
					stroke="currentColor"
					stroke-width="7"
					stroke-linecap="round"></path>
				<path
					d="M3 24H45"
					stroke="currentColor"
					stroke-width="7"
					stroke-linecap="round"></path>
				<path
					d="M3 45H45"
					stroke="currentColor"
					stroke-width="7"
					stroke-linecap="round"></path>
			</svg>
		</button>
	</p>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<FlexContainer gap={"3rem"}>
		<p>
			<button type="button" onclick="this.toggleAttribute('open')">
				<svg viewBox="0 0 48 48" fill="none" xmlns="http://www.w3.org/2000/svg">
					<path
						d="M3 3H45"
						stroke="currentColor"
						stroke-width="7"
						stroke-linecap="round"></path>
					<path
						d="M3 24H45"
						stroke="currentColor"
						stroke-width="7"
						stroke-linecap="round"></path>
					<path
						d="M3 45H45"
						stroke="currentColor"
						stroke-width="7"
						stroke-linecap="round"></path>
				</svg>
			</button>
		</p>
		<CodeBlock lang="css"
			>{
				`button[aria-expanded="true"] {
    path:nth-child(1) {
      transform: rotate(45deg) scaleX(1.35);
    }

    path:nth-child(2) {
      opacity: 0;
    }

    path:nth-child(3) {
      transform: rotate(-45deg) scaleX(1.35);
    }

    svg {
      transform: rotate(-180deg);
    }
  }
}`
			}</CodeBlock
		>
	</FlexContainer>
</Slide>

<style lang="scss">
	$transition-duration: 500ms;
	$transition-easing: cubic-bezier(0.4, 0, 0.2, 1);

	button {
		background: transparent;
		border: none;
		color: var(--font-color-default);
		cursor: pointer;
		font-size: 6rem; // button size
		width: 1em;
		height: 1em;
		display: inline-flex;
		flex-direction: column;
		justify-content: space-between;
		padding: 0.2em;
		border-radius: 0.1em;

		@media (hover: hover) {
			transition: background-color 100ms;

			&:hover {
				background: hsla(0, 0, 0, 0.06);
			}

			&:active {
				background: hsla(0, 0, 0, 0.1);
			}
		}
	}

	svg {
		width: 100%;
		height: 100%;
		overflow: visible;
		transition: transform $transition-duration $transition-easing;
	}

	path {
		transition: transform $transition-duration $transition-easing;

		&:nth-child(1) {
			transform-origin: 5% 10%;
		}

		&:nth-child(2) {
			transition-property: opacity;
		}

		&:nth-child(3) {
			transform-origin: 5% 90%;
		}
	}

	button[open] {
		svg {
			transform: rotate(-180deg);
		}

		path:nth-child(1) {
			transform: rotate(45deg) scaleX(1.35);
		}

		path:nth-child(2) {
			opacity: 0;
		}

		path:nth-child(3) {
			transform: rotate(-45deg) scaleX(1.35);
		}
	}
</style>
