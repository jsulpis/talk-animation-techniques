---
import CodepenSource from "../../../../../components/CodepenSource.astro";
import Slide from "../../../../../components/Slide.astro";
import CardAnimationScroll from "../../../css/animation/CardAnimationScroll.svelte";
import CardAnimation from "./CardAnimation.svelte";

const { title } = Astro.props;
const subSectionTitle = "Contrôler l'exécution";
---

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<article>
		<div class="code-container">
			<span data-id="waapi-lang" class="code-lang">javascript</span>
			<pre
				data-id="waapi-pre"><code data-id="waapi-code" class="language-javascript" data-line-numbers>{
				`const animation = card.animate(keyframes, options);
				`}</code></pre>
		</div>
	</article>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<article>
		<div class="code-container">
			<span data-id="waapi-lang" class="code-lang">javascript</span>
			<pre
				data-id="waapi-pre"><code data-id="waapi-code" class="language-javascript" data-line-numbers>{
				`const animation = card.animate(keyframes, options);

animation.pause();
`}</code></pre>
		</div>
	</article>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<article>
		<div class="code-container">
			<span data-id="waapi-lang" class="code-lang">javascript</span>
			<pre
				data-id="waapi-pre"><code data-id="waapi-code" class="language-javascript" data-line-numbers>{
				`const animation = card.animate(keyframes, options);

animation.pause();
...
animation.play();
`}</code></pre>
		</div>
	</article>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<article>
		<div class="code-container">
			<span data-id="waapi-lang" class="code-lang">javascript</span>
			<pre
				data-id="waapi-pre"><code data-id="waapi-code" class="language-javascript" data-line-numbers>{
				`const animation = card.animate(keyframes, options);

animation.pause();
...
animation.play();
animation.cancel();
animation.reverse();
`}</code></pre>
		</div>
	</article>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<article>
		<div class="code-container">
			<span data-id="waapi-lang" class="code-lang">javascript</span>
			<pre
				data-id="waapi-pre"><code data-id="waapi-code" class="language-javascript" data-line-numbers>{
				`const animation = card.animate(keyframes, options);

animation.pause();
...
animation.play();
animation.cancel();
animation.reverse();

const seek = (timestamp) => animation.currentTime = timestamp;
`}</code></pre>
		</div>
	</article>
</Slide>

<!-- <Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<article>
		<div class="code-container">
			<span data-id="waapi-finish-lang" class="code-lang">javascript</span>
			<pre
				data-id="waapi-finish-pre"><code data-id="waapi-finish-code" class="language-javascript" data-line-numbers>{
				`disappearAnimation.onfinish = () => removeElement();
				`}</code></pre>
		</div>
	</article>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<article>
		<div class="code-container">
			<span data-id="waapi-finish-lang" class="code-lang">javascript</span>
			<pre
				data-id="waapi-finish-pre"><code data-id="waapi-finish-code" class="language-javascript" data-line-numbers>{
				`disappearAnimation.onfinish = () => removeElement();

animation1.finished.then(() => animation2.play());
				`}</code></pre>
		</div>
	</article>
</Slide> -->

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<div>
		<CardAnimation client:visible />
	</div>
	<CodepenSource
		pseudo="jsulpis"
		name="3D Card Flip - WAAPI"
		url="https://codepen.io/jsulpis/pen/oNQBEGm"
	/>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<!--
	 Well this demo does not use the WAAPI, I made this animation first in CSS using
	 the negative animation-delay trick.
	 It could be done with the WAAPI.
	-->
	<CardAnimationScroll client:visible />
</Slide>

<style>
	.code-container code {
		min-width: 80ch;
		transform: none !important;
		height: auto !important;
	}
	article {
		height: 40vh;
	}
</style>
