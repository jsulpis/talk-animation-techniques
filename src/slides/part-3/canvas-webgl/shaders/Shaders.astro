---
import CodeBlock from "../../../../components/CodeBlock.astro";
import Slide from "../../../../components/Slide.astro";
import pixel from "../images/pixelShader.png";
import pixels from "../images/pixels.webp";
import vertex from "../images/vertexShader.png";
import VertexShaderDemoImage from "./vertex/demo-image/VertexShaderDemoImage.svelte";
import VertexShaderDemoParticles from "./vertex/demo-particles/VertexShaderDemoParticles.svelte";
import gpu from "../../../../assets/gpu.png";
import CodepenSource from "../../../../components/CodepenSource.astro";
import FragmentGradient from "./fragment/FragmentGradient.svelte";
import FragmentShaderReactLogo from "./fragment/demo-react-logo/FragmentShaderReactLogo.svelte";
import FragmentShaderBox from "./fragment/demo-box/FragmentShaderBox.svelte";
import FragmentShaderImages from "./fragment/demo-images/FragmentShaderImages.svelte";

const { title } = Astro.props;
const subSectionTitle = "Shaders GLSL";
---

<Slide sectionTitle={title}>
	<div class="teaser"><p>Pour aller plus loin...</p></div>
</Slide>

<Slide sectionTitle={title}>
	<div class="teaser">
		<p>Pour aller plus loin...</p>
		<small>(Il y a pas plus loin...)</small>
	</div>
</Slide>

<Slide sectionTitle={title}>
	<h2>Shaders GLSL&nbsp;</h2>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<div class="gpu-wrapper">
		<div>
			<img data-src={gpu} alt="" />
			<p><strong>GPU</strong></p>
		</div>
	</div>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<div class="gpu-wrapper">
		<div>
			<img data-src={gpu} alt="" />
			<p><strong>GPU</strong></p>
		</div>
		<img data-src={pixels} alt="pixels" class="pixels" />
	</div>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<!-- http://daureg.free.fr/ta_webit/fonctionnement.html -->
	<img data-src={vertex} alt="vertex shader" />
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Vertex Shader</h3>
	<p>geométrie</p>
	<div class="content p-0">
		<CodeBlock lang="GLSL" lines="|1|5|2">
			{
				`attribute vec3 position;
uniform float time;

void main() {
  gl_Position = vec4(position.x, position.y, sin(time), 1.0);
}`
			}
		</CodeBlock>
	</div>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Vertex Shader</h3>
	<p>geométrie</p>
	<div class="content p-0">
		<VertexShaderDemoImage client:visible />
	</div>
	<CodepenSource
		pseudo="jsulpis"
		name="WebGL Displaced Sphere"
		url="https://codepen.io/jsulpis/pen/abPLJyd"
	/>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Vertex Shader</h3>
	<p>geométrie</p>
	<div class="content p-0">
		<VertexShaderDemoParticles client:visible />
	</div>
	<CodepenSource
		pseudo="jsulpis"
		name="WebGL Points (Vanilla)"
		url="https://codesandbox.io/p/devbox/webgl-points-vanilla-45xnpc"
		platform="codesandbox"
	/>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<!-- http://daureg.free.fr/ta_webit/fonctionnement.html -->
	<img data-src={pixel} alt="pixel shader" />
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0">
		<CodeBlock lang="GLSL">
			{
				`varying vec2 uv;
uniform float time;

void main() {
  gl_FragColor = vec4(uv.x, uv.y, sin(time), 1.0);
}`
			}
		</CodeBlock>
	</div>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content"></div>
	<FragmentGradient client:visible />
	<CodepenSource
		pseudo="Stripe.com"
		name="Gradient animation"
		url="https://whatamesh.vercel.app/"
		platform="other"
	/>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0">
		<FragmentShaderImages client:visible />
	</div>
	<CodepenSource
		pseudo="Michal Zalobny"
		name="Image transitions"
		url="https://portfolio2022.michalzalobny.com/projects/image-transitions"
		platform="other"
	/>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0">
		<FragmentShaderReactLogo client:visible />
	</div>
	<CodepenSource
		pseudo="jsulpis"
		name="React logo"
		url="https://www.shadertoy.com/view/ms3yzH"
		platform="shadertoy"
	/>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0 ray-tracing">
		<FragmentShaderBox client:visible />
	</div>
	<CodepenSource
		pseudo="jsulpis"
		name="Ray tracing starter"
		url="https://www.shadertoy.com/view/cddyDS"
		platform="shadertoy"
	/>
</Slide>

<!-- <Slide sectionTitle={title} subSectionTitle={subSectionTitle} animate={false}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0">
		<iframe
			width="900"
			height="500"
			data-src="https://www.shadertoy.com/embed/3tsyzl?gui=true&t=10&paused=true&muted=false"
			allowfullscreen></iframe>
	</div>
</Slide> -->

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>david.li/fluid</h3>
	<iframe class="simulation" data-src="http://david.li/fluid/"></iframe>
</Slide>

<style lang="scss">
	h2 {
		margin: 0;
	}
	.teaser {
		p {
			font-size: 1.7em;
			margin: 0;
		}
		small {
			font-size: 1em;
		}
	}
	p {
		margin-bottom: 0.5em;
	}
	.emoji {
		font-size: 3em;
	}
	h3 {
		font-size: 1.5em;
		margin-block: -2em 0;
	}
	iframe {
		height: 60vh;
		width: auto;
		border: 0;
		border-radius: 0.5rem;
		aspect-ratio: 9/5;

		&.simulation {
			height: 70vh;
			margin-bottom: -15vh;
		}
	}
	.ray-tracing {
		position: relative;
		z-index: -1;
	}
	img {
		height: 50vh;
		object-fit: contain;
		max-width: 90vw;
	}

	.gpu-wrapper {
		display: flex;
		justify-content: space-around;
		align-items: center;
		margin-top: -2rem;
		font-size: 1.2em;
		gap: 4rem;
	}
	.gpu-wrapper img {
		height: 30vh;
		width: 40vh;
		object-fit: contain;

		&.pixels {
			height: 45vh;
			width: auto;
		}
	}
	.gpu-wrapper {
		height: 50vh !important;
		margin-bottom: -10%;
	}
	.gpu-wrapper img.big {
		height: 50vh;
		object-fit: contain;
	}
</style>
