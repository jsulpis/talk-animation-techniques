---
import CodeBlock from "../../../../components/CodeBlock.astro";
import Slide from "../../../../components/Slide.astro";
import pipeline from "../images/pipeline.png";
import pixel from "../images/pixelShader.png";
import pixels from "../images/pixels.webp";
import vertex from "../images/vertexShader.png";
import VertexShaderDemoImage from "./vertex/demo-image/VertexShaderDemoImage.svelte";
import VertexShaderDemoParticles from "./vertex/demo-particles/VertexShaderDemoParticles.svelte";
import gpuImage from "../../../intro/images/gpu-image.png";
import gpu from "../../../../assets/gpu.png";
import CodepenSource from "../../../../components/CodepenSource.astro";
import CodeSource from "../../../../components/CodeSource.astro";
import FragmentGradient from "./fragment/FragmentGradient.svelte"
import FragmentShaderReactLogo from "./fragment/demo-react-logo/FragmentShaderReactLogo.svelte"

const { title } = Astro.props;
const subSectionTitle = "Shaders GLSL";
---

<Slide sectionTitle={title}>
	<div class="teaser"><p>Pour aller plus loin...</p></div>
</Slide>

<Slide sectionTitle={title}>
	<div class="teaser">
		<p>Pour aller plus loin...</p>
		<small>(Il y a pas plus loin...)</small>
	</div>
</Slide>

<Slide sectionTitle={title}>
	<h2>Shaders GLSL&nbsp;</h2>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<div class="gpu-wrapper">
		<div>
			<img data-src={gpu} alt="" />
			<p><strong>GPU</strong></p>
		</div>
	</div>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<div class="gpu-wrapper">
		<div>
			<img data-src={gpu} alt="" />
			<p><strong>GPU</strong></p>
		</div>
		<img data-src={pixels} alt="pixels" class="pixels"/>
	</div>
</Slide>

<!-- <Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<div class="gpu-wrapper">
		<img  class="big" data-src={gpuImage} alt="" />
		<div>
			<img data-src={gpu} alt="" />
			<p><strong>GPU</strong></p>
		</div>
	</div>
</Slide> -->

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<!-- http://daureg.free.fr/ta_webit/fonctionnement.html -->
	<img
		data-src={vertex}
		alt="vertex shader"
	/>
</Slide>

<!-- <Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Vertex Shader</h3>
	<p>geométrie</p>
	<div class="content p-0">
		<CodeBlock lang="GLSL">
			{
				`void main() {
  gl_Position = projectionMatrix * modelViewMatrix * vec4(position, 1.0);
}`
			}
		</CodeBlock>
	</div>
</Slide> -->

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Vertex Shader</h3>
	<p>geométrie</p>
	<div class="content p-0">
		<CodeBlock lang="GLSL" lines="|1">
			{
				`uniform float time;

void main() {
  gl_Position = vec4(0.0, 0.0, sin(time), 1.0);
}`
			}
		</CodeBlock>
	</div>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Vertex Shader</h3>
	<p>geométrie</p>
	<div class="content p-0">
		<VertexShaderDemoImage client:visible />
	</div>
	<CodepenSource
		pseudo="jsulpis"
		name="Image deformation with WebGL shaders"
		url="https://codepen.io/jsulpis/pen/abQJOvV"
	/>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Vertex Shader</h3>
	<p>geométrie</p>
	<div class="content fullpage">
		<VertexShaderDemoParticles client:visible />
	</div>
	<CodepenSource
		pseudo="Three.js"
		name="particles billboards example"
		url="https://threejs.org/examples/#webgl_points_billboards"
		platform="other"
	/>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<!-- http://daureg.free.fr/ta_webit/fonctionnement.html -->
	<img
		data-src={pixel}
		alt="pixel shader"
	/>
</Slide>

<!-- <Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0">
		<CodeBlock lang="GLSL">
			{
				`void main() {
  gl_FragColor = vec4(1.0, 0.0, 0.0, 1.0);
}`
			}
		</CodeBlock>
	</div>
</Slide> -->

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0">
		<CodeBlock lang="GLSL">
			{
				`uniform float time;

void main() {
  gl_FragColor = vec4(sin(time), 0.0, 0.0, 1.0);
}`
			}
		</CodeBlock>
	</div>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content"></div>
	<FragmentGradient	 client:visible/>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0">
		<FragmentShaderReactLogo client:visible/>
	</div>
	<CodepenSource
		pseudo="jsulpis"
		name="React logo"
		url="https://www.shadertoy.com/view/ms3yzH"
		platform="shadertoy">
	</CodepenSource>
</Slide>

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0">
		<iframe
			width="900"
			height="500"
			data-src="https://www.shadertoy.com/embed/ltjBzK?gui=true&t=10&paused=true&muted=false"
			allowfullscreen></iframe>
	</div>
</Slide>

<!-- <Slide sectionTitle={title} subSectionTitle={subSectionTitle} animate={false}>
	<h3>Fragment Shader</h3>
	<p>couleur</p>
	<div class="content p-0">
		<iframe
			width="900"
			height="500"
			data-src="https://www.shadertoy.com/embed/3tsyzl?gui=true&t=10&paused=true&muted=false"
			allowfullscreen></iframe>
	</div>
</Slide> -->

<Slide sectionTitle={title} subSectionTitle={subSectionTitle}>
	<h3>david.li/fluid</h3>
		<iframe class="simulation" data-src="http://david.li/fluid/"></iframe>
	</div>
</Slide>

<style lang="scss">
	h2 {
		margin: 0;
	}
	.teaser {
		p {
			font-size: 1.7em;
			margin: 0;
		}
		small {
			font-size: 1em;
		}
	}
	p {
		margin-bottom: 0.5em;
	}
	.emoji {
		font-size: 3em;
	}
	h3 {
		font-size: 1.5em;
		margin-block: -2em 0;
	}
	iframe {
		height: 60vh;
		width: auto;
		border: 0;
		border-radius: .5rem;
		aspect-ratio: 9/5;

		&.simulation {
			height: 70vh;
			margin-bottom: -15vh;
		}
	}
	img {
		height: 50vh;
		object-fit: contain;
		max-width: 90vw;
	}

	.gpu-wrapper {
		display: flex;
		justify-content: space-around;
		align-items: center;
		margin-top: -2rem;
		font-size: 1.2em;
		gap: 4rem;
	}
	.gpu-wrapper img {
		height: 30vh;
		width: 40vh;
		object-fit: contain;

		&.pixels {
			height: 45vh;
			width: auto;
		}
	}
	.gpu-wrapper {
		height: 50vh !important;
		margin-bottom: -10%;
	}
	.gpu-wrapper img.big {
		height: 50vh;
		object-fit: contain;
	}
	.fullpage {
		position: relative;
		z-index: -1;
	}
</style>
