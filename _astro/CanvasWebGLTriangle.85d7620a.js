import{S as v,i as b,s as R,e as E,c as F,a as T,d as u,b as c,f as x,n as l,o as C,g as y}from"./index.da907017.js";function L(o){let t;return{c(){t=E("canvas"),this.h()},l(a){t=F(a,"CANVAS",{width:!0,height:!0,class:!0}),T(t).forEach(u),this.h()},h(){c(t,"width","400"),c(t,"height","400"),c(t,"class","svelte-1heffj")},m(a,r){x(a,t,r),o[1](t)},p:l,i:l,o:l,d(a){a&&u(t),o[1](null)}}}function P(o,t,a){let r;C(()=>{const e=r.getContext("webgl"),n=e.createBuffer();e.bindBuffer(e.ARRAY_BUFFER,n),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-.5,-.5,.5,-.5,-.5,.5,.5,.5]),e.STATIC_DRAW),n.itemSize=2,n.numItems=4;const f="attribute vec2 a_position;void main() { gl_Position = vec4 (a_position, 0,1); }",_=`precision mediump float;void main() { gl_FragColor = vec4 (0,${167/255},${245/255},1); }`,h=function(p,A){const i=e.createShader(A);return e.shaderSource(i,p),e.compileShader(i),i},g=h(f,e.VERTEX_SHADER),S=h(_,e.FRAGMENT_SHADER),s=e.createProgram();e.attachShader(s,g),e.attachShader(s,S),e.linkProgram(s),e.useProgram(s);const d=e.getAttribLocation(s,"a_position");e.enableVertexAttribArray(d),e.vertexAttribPointer(d,n.itemSize,e.FLOAT,!1,0,0),e.drawArrays(e.TRIANGLE_STRIP,0,n.numItems)});function m(e){y[e?"unshift":"push"](()=>{r=e,a(0,r)})}return[r,m]}class B extends v{constructor(t){super(),b(this,t,P,L,R,{})}}export{B as default};
